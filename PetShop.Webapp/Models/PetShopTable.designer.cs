#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PetShop.Webapp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PetShop")]
	public partial class PetShopTableDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertBannerData(BannerData instance);
    partial void UpdateBannerData(BannerData instance);
    partial void DeleteBannerData(BannerData instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertLineItem(LineItem instance);
    partial void UpdateLineItem(LineItem instance);
    partial void DeleteLineItem(LineItem instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertSignOn(SignOn instance);
    partial void UpdateSignOn(SignOn instance);
    partial void DeleteSignOn(SignOn instance);
    #endregion
		
		public PetShopTableDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PetShopConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PetShopTableDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PetShopTableDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PetShopTableDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PetShopTableDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Account
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Supplier
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<BannerData> BannerData
		{
			get
			{
				return this.GetTable<BannerData>();
			}
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Inventory> Inventory
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<Item> Item
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<LineItem> LineItem
		{
			get
			{
				return this.GetTable<LineItem>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profile
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<SignOn> SignOn
		{
			get
			{
				return this.GetTable<SignOn>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Status;
		
		private string _Addr1;
		
		private string _Addr2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Country;
		
		private string _Phone;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAddr1Changing(string value);
    partial void OnAddr1Changed();
    partial void OnAddr2Changing(string value);
    partial void OnAddr2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(2)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr1", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Addr1
		{
			get
			{
				return this._Addr1;
			}
			set
			{
				if ((this._Addr1 != value))
				{
					this.OnAddr1Changing(value);
					this.SendPropertyChanging();
					this._Addr1 = value;
					this.SendPropertyChanged("Addr1");
					this.OnAddr1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr2", DbType="NVarChar(80)")]
		public string Addr2
		{
			get
			{
				return this._Addr2;
			}
			set
			{
				if ((this._Addr2 != value))
				{
					this.OnAddr2Changing(value);
					this.SendPropertyChanging();
					this._Addr2 = value;
					this.SendPropertyChanged("Addr2");
					this.OnAddr2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuppId;
		
		private string _Name;
		
		private string _Status;
		
		private string _Addr1;
		
		private string _Addr2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private EntitySet<Item> _Item;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuppIdChanging(int value);
    partial void OnSuppIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAddr1Changing(string value);
    partial void OnAddr1Changed();
    partial void OnAddr2Changing(string value);
    partial void OnAddr2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Supplier()
		{
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SuppId
		{
			get
			{
				return this._SuppId;
			}
			set
			{
				if ((this._SuppId != value))
				{
					this.OnSuppIdChanging(value);
					this.SendPropertyChanging();
					this._SuppId = value;
					this.SendPropertyChanged("SuppId");
					this.OnSuppIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr1", DbType="NVarChar(80)")]
		public string Addr1
		{
			get
			{
				return this._Addr1;
			}
			set
			{
				if ((this._Addr1 != value))
				{
					this.OnAddr1Changing(value);
					this.SendPropertyChanging();
					this._Addr1 = value;
					this.SendPropertyChanged("Addr1");
					this.OnAddr1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr2", DbType="NVarChar(80)")]
		public string Addr2
		{
			get
			{
				return this._Addr2;
			}
			set
			{
				if ((this._Addr2 != value))
				{
					this.OnAddr2Changing(value);
					this.SendPropertyChanging();
					this._Addr2 = value;
					this.SendPropertyChanged("Addr2");
					this.OnAddr2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(80)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(80)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(5)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(40)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Item", Storage="_Item", ThisKey="SuppId", OtherKey="Supplier")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Supplier1 = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Supplier1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BannerData")]
	public partial class BannerData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FavCategory;
		
		private string _BannerData1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFavCategoryChanging(string value);
    partial void OnFavCategoryChanged();
    partial void OnBannerData1Changing(string value);
    partial void OnBannerData1Changed();
    #endregion
		
		public BannerData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavCategory", DbType="NVarChar(80) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FavCategory
		{
			get
			{
				return this._FavCategory;
			}
			set
			{
				if ((this._FavCategory != value))
				{
					this.OnFavCategoryChanging(value);
					this.SendPropertyChanging();
					this._FavCategory = value;
					this.SendPropertyChanged("FavCategory");
					this.OnFavCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BannerData", Storage="_BannerData1", DbType="NVarChar(255)")]
		public string BannerData1
		{
			get
			{
				return this._BannerData1;
			}
			set
			{
				if ((this._BannerData1 != value))
				{
					this.OnBannerData1Changing(value);
					this.SendPropertyChanging();
					this._BannerData1 = value;
					this.SendPropertyChanged("BannerData1");
					this.OnBannerData1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CatId;
		
		private string _Name;
		
		private string _Descn;
		
		private EntitySet<Product> _Product;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatIdChanging(string value);
    partial void OnCatIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescnChanging(string value);
    partial void OnDescnChanged();
    #endregion
		
		public Category()
		{
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CatId
		{
			get
			{
				return this._CatId;
			}
			set
			{
				if ((this._CatId != value))
				{
					this.OnCatIdChanging(value);
					this.SendPropertyChanging();
					this._CatId = value;
					this.SendPropertyChanged("CatId");
					this.OnCatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descn", DbType="NVarChar(255)")]
		public string Descn
		{
			get
			{
				return this._Descn;
			}
			set
			{
				if ((this._Descn != value))
				{
					this.OnDescnChanging(value);
					this.SendPropertyChanging();
					this._Descn = value;
					this.SendPropertyChanged("Descn");
					this.OnDescnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Product", ThisKey="CatId", OtherKey="Category")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ItemId;
		
		private int _Qty;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    #endregion
		
		public Inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ItemId;
		
		private string _ProductId;
		
		private System.Nullable<decimal> _ListPrice;
		
		private System.Nullable<decimal> _UnitCost;
		
		private System.Nullable<int> _Supplier;
		
		private string _Status;
		
		private string _Attr1;
		
		private string _Attr2;
		
		private string _Attr3;
		
		private string _Attr4;
		
		private string _Attr5;
		
		private EntityRef<Supplier> _Supplier1;
		
		private EntityRef<Product> _Product;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnProductIdChanging(string value);
    partial void OnProductIdChanged();
    partial void OnListPriceChanging(System.Nullable<decimal> value);
    partial void OnListPriceChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnSupplierChanging(System.Nullable<int> value);
    partial void OnSupplierChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAttr1Changing(string value);
    partial void OnAttr1Changed();
    partial void OnAttr2Changing(string value);
    partial void OnAttr2Changed();
    partial void OnAttr3Changing(string value);
    partial void OnAttr3Changed();
    partial void OnAttr4Changing(string value);
    partial void OnAttr4Changed();
    partial void OnAttr5Changing(string value);
    partial void OnAttr5Changed();
    #endregion
		
		public Item()
		{
			this._Supplier1 = default(EntityRef<Supplier>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="Int")]
		public System.Nullable<int> Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					if (this._Supplier1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(2)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr1", DbType="NVarChar(80)")]
		public string Attr1
		{
			get
			{
				return this._Attr1;
			}
			set
			{
				if ((this._Attr1 != value))
				{
					this.OnAttr1Changing(value);
					this.SendPropertyChanging();
					this._Attr1 = value;
					this.SendPropertyChanged("Attr1");
					this.OnAttr1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr2", DbType="NVarChar(80)")]
		public string Attr2
		{
			get
			{
				return this._Attr2;
			}
			set
			{
				if ((this._Attr2 != value))
				{
					this.OnAttr2Changing(value);
					this.SendPropertyChanging();
					this._Attr2 = value;
					this.SendPropertyChanged("Attr2");
					this.OnAttr2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr3", DbType="NVarChar(80)")]
		public string Attr3
		{
			get
			{
				return this._Attr3;
			}
			set
			{
				if ((this._Attr3 != value))
				{
					this.OnAttr3Changing(value);
					this.SendPropertyChanging();
					this._Attr3 = value;
					this.SendPropertyChanged("Attr3");
					this.OnAttr3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr4", DbType="NVarChar(80)")]
		public string Attr4
		{
			get
			{
				return this._Attr4;
			}
			set
			{
				if ((this._Attr4 != value))
				{
					this.OnAttr4Changing(value);
					this.SendPropertyChanging();
					this._Attr4 = value;
					this.SendPropertyChanged("Attr4");
					this.OnAttr4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attr5", DbType="NVarChar(80)")]
		public string Attr5
		{
			get
			{
				return this._Attr5;
			}
			set
			{
				if ((this._Attr5 != value))
				{
					this.OnAttr5Changing(value);
					this.SendPropertyChanging();
					this._Attr5 = value;
					this.SendPropertyChanged("Attr5");
					this.OnAttr5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Item", Storage="_Supplier1", ThisKey="Supplier", OtherKey="SuppId", IsForeignKey=true)]
		public Supplier Supplier1
		{
			get
			{
				return this._Supplier1.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier1.Entity;
				if (((previousValue != value) 
							|| (this._Supplier1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier1.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Supplier1.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._Supplier = value.SuppId;
					}
					else
					{
						this._Supplier = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Item", Storage="_Product", ThisKey="ProductId", OtherKey="ProductId", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._ProductId = value.ProductId;
					}
					else
					{
						this._ProductId = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineItem")]
	public partial class LineItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _LineNum;
		
		private string _ItemId;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnLineNumChanging(int value);
    partial void OnLineNumChanged();
    partial void OnItemIdChanging(string value);
    partial void OnItemIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    #endregion
		
		public LineItem()
		{
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNum
		{
			get
			{
				return this._LineNum;
			}
			set
			{
				if ((this._LineNum != value))
				{
					this.OnLineNumChanging(value);
					this.SendPropertyChanging();
					this._LineNum = value;
					this.SendPropertyChanged("LineNum");
					this.OnLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_LineItem", Storage="_Orders", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.LineItem.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.LineItem.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private string _UserId;
		
		private System.DateTime _OrderDate;
		
		private string _ShipAddr1;
		
		private string _ShipAddr2;
		
		private string _ShipCity;
		
		private string _ShipState;
		
		private string _ShipZip;
		
		private string _ShipCountry;
		
		private string _BillAddr1;
		
		private string _BillAddr2;
		
		private string _BillCity;
		
		private string _BillState;
		
		private string _BillZip;
		
		private string _BillCountry;
		
		private string _Courier;
		
		private decimal _TotalPrice;
		
		private string _BillToFirstName;
		
		private string _BillToLastName;
		
		private string _ShipToFirstName;
		
		private string _ShipToLastName;
		
		private string _CreditCard;
		
		private string _ExprDate;
		
		private string _CardType;
		
		private string _Locale;
		
		private EntitySet<LineItem> _LineItem;
		
		private EntitySet<OrderStatus> _OrderStatus;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnShipAddr1Changing(string value);
    partial void OnShipAddr1Changed();
    partial void OnShipAddr2Changing(string value);
    partial void OnShipAddr2Changed();
    partial void OnShipCityChanging(string value);
    partial void OnShipCityChanged();
    partial void OnShipStateChanging(string value);
    partial void OnShipStateChanged();
    partial void OnShipZipChanging(string value);
    partial void OnShipZipChanged();
    partial void OnShipCountryChanging(string value);
    partial void OnShipCountryChanged();
    partial void OnBillAddr1Changing(string value);
    partial void OnBillAddr1Changed();
    partial void OnBillAddr2Changing(string value);
    partial void OnBillAddr2Changed();
    partial void OnBillCityChanging(string value);
    partial void OnBillCityChanged();
    partial void OnBillStateChanging(string value);
    partial void OnBillStateChanged();
    partial void OnBillZipChanging(string value);
    partial void OnBillZipChanged();
    partial void OnBillCountryChanging(string value);
    partial void OnBillCountryChanged();
    partial void OnCourierChanging(string value);
    partial void OnCourierChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    partial void OnBillToFirstNameChanging(string value);
    partial void OnBillToFirstNameChanged();
    partial void OnBillToLastNameChanging(string value);
    partial void OnBillToLastNameChanged();
    partial void OnShipToFirstNameChanging(string value);
    partial void OnShipToFirstNameChanged();
    partial void OnShipToLastNameChanging(string value);
    partial void OnShipToLastNameChanged();
    partial void OnCreditCardChanging(string value);
    partial void OnCreditCardChanged();
    partial void OnExprDateChanging(string value);
    partial void OnExprDateChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnLocaleChanging(string value);
    partial void OnLocaleChanged();
    #endregion
		
		public Orders()
		{
			this._LineItem = new EntitySet<LineItem>(new Action<LineItem>(this.attach_LineItem), new Action<LineItem>(this.detach_LineItem));
			this._OrderStatus = new EntitySet<OrderStatus>(new Action<OrderStatus>(this.attach_OrderStatus), new Action<OrderStatus>(this.detach_OrderStatus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipAddr1", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ShipAddr1
		{
			get
			{
				return this._ShipAddr1;
			}
			set
			{
				if ((this._ShipAddr1 != value))
				{
					this.OnShipAddr1Changing(value);
					this.SendPropertyChanging();
					this._ShipAddr1 = value;
					this.SendPropertyChanged("ShipAddr1");
					this.OnShipAddr1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipAddr2", DbType="NVarChar(80)")]
		public string ShipAddr2
		{
			get
			{
				return this._ShipAddr2;
			}
			set
			{
				if ((this._ShipAddr2 != value))
				{
					this.OnShipAddr2Changing(value);
					this.SendPropertyChanging();
					this._ShipAddr2 = value;
					this.SendPropertyChanged("ShipAddr2");
					this.OnShipAddr2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipCity", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ShipCity
		{
			get
			{
				return this._ShipCity;
			}
			set
			{
				if ((this._ShipCity != value))
				{
					this.OnShipCityChanging(value);
					this.SendPropertyChanging();
					this._ShipCity = value;
					this.SendPropertyChanged("ShipCity");
					this.OnShipCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipState", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ShipState
		{
			get
			{
				return this._ShipState;
			}
			set
			{
				if ((this._ShipState != value))
				{
					this.OnShipStateChanging(value);
					this.SendPropertyChanging();
					this._ShipState = value;
					this.SendPropertyChanged("ShipState");
					this.OnShipStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipZip", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShipZip
		{
			get
			{
				return this._ShipZip;
			}
			set
			{
				if ((this._ShipZip != value))
				{
					this.OnShipZipChanging(value);
					this.SendPropertyChanging();
					this._ShipZip = value;
					this.SendPropertyChanged("ShipZip");
					this.OnShipZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipCountry", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ShipCountry
		{
			get
			{
				return this._ShipCountry;
			}
			set
			{
				if ((this._ShipCountry != value))
				{
					this.OnShipCountryChanging(value);
					this.SendPropertyChanging();
					this._ShipCountry = value;
					this.SendPropertyChanged("ShipCountry");
					this.OnShipCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillAddr1", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string BillAddr1
		{
			get
			{
				return this._BillAddr1;
			}
			set
			{
				if ((this._BillAddr1 != value))
				{
					this.OnBillAddr1Changing(value);
					this.SendPropertyChanging();
					this._BillAddr1 = value;
					this.SendPropertyChanged("BillAddr1");
					this.OnBillAddr1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillAddr2", DbType="NVarChar(80)")]
		public string BillAddr2
		{
			get
			{
				return this._BillAddr2;
			}
			set
			{
				if ((this._BillAddr2 != value))
				{
					this.OnBillAddr2Changing(value);
					this.SendPropertyChanging();
					this._BillAddr2 = value;
					this.SendPropertyChanged("BillAddr2");
					this.OnBillAddr2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillCity", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string BillCity
		{
			get
			{
				return this._BillCity;
			}
			set
			{
				if ((this._BillCity != value))
				{
					this.OnBillCityChanging(value);
					this.SendPropertyChanging();
					this._BillCity = value;
					this.SendPropertyChanged("BillCity");
					this.OnBillCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillState", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string BillState
		{
			get
			{
				return this._BillState;
			}
			set
			{
				if ((this._BillState != value))
				{
					this.OnBillStateChanging(value);
					this.SendPropertyChanging();
					this._BillState = value;
					this.SendPropertyChanged("BillState");
					this.OnBillStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillZip", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BillZip
		{
			get
			{
				return this._BillZip;
			}
			set
			{
				if ((this._BillZip != value))
				{
					this.OnBillZipChanging(value);
					this.SendPropertyChanging();
					this._BillZip = value;
					this.SendPropertyChanged("BillZip");
					this.OnBillZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillCountry", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BillCountry
		{
			get
			{
				return this._BillCountry;
			}
			set
			{
				if ((this._BillCountry != value))
				{
					this.OnBillCountryChanging(value);
					this.SendPropertyChanging();
					this._BillCountry = value;
					this.SendPropertyChanged("BillCountry");
					this.OnBillCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Courier", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Courier
		{
			get
			{
				return this._Courier;
			}
			set
			{
				if ((this._Courier != value))
				{
					this.OnCourierChanging(value);
					this.SendPropertyChanging();
					this._Courier = value;
					this.SendPropertyChanged("Courier");
					this.OnCourierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(10,2) NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToFirstName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string BillToFirstName
		{
			get
			{
				return this._BillToFirstName;
			}
			set
			{
				if ((this._BillToFirstName != value))
				{
					this.OnBillToFirstNameChanging(value);
					this.SendPropertyChanging();
					this._BillToFirstName = value;
					this.SendPropertyChanged("BillToFirstName");
					this.OnBillToFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToLastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string BillToLastName
		{
			get
			{
				return this._BillToLastName;
			}
			set
			{
				if ((this._BillToLastName != value))
				{
					this.OnBillToLastNameChanging(value);
					this.SendPropertyChanging();
					this._BillToLastName = value;
					this.SendPropertyChanged("BillToLastName");
					this.OnBillToLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToFirstName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ShipToFirstName
		{
			get
			{
				return this._ShipToFirstName;
			}
			set
			{
				if ((this._ShipToFirstName != value))
				{
					this.OnShipToFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ShipToFirstName = value;
					this.SendPropertyChanged("ShipToFirstName");
					this.OnShipToFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToLastName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string ShipToLastName
		{
			get
			{
				return this._ShipToLastName;
			}
			set
			{
				if ((this._ShipToLastName != value))
				{
					this.OnShipToLastNameChanging(value);
					this.SendPropertyChanging();
					this._ShipToLastName = value;
					this.SendPropertyChanged("ShipToLastName");
					this.OnShipToLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CreditCard
		{
			get
			{
				return this._CreditCard;
			}
			set
			{
				if ((this._CreditCard != value))
				{
					this.OnCreditCardChanging(value);
					this.SendPropertyChanging();
					this._CreditCard = value;
					this.SendPropertyChanged("CreditCard");
					this.OnCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExprDate", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string ExprDate
		{
			get
			{
				return this._ExprDate;
			}
			set
			{
				if ((this._ExprDate != value))
				{
					this.OnExprDateChanging(value);
					this.SendPropertyChanging();
					this._ExprDate = value;
					this.SendPropertyChanged("ExprDate");
					this.OnExprDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locale", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Locale
		{
			get
			{
				return this._Locale;
			}
			set
			{
				if ((this._Locale != value))
				{
					this.OnLocaleChanging(value);
					this.SendPropertyChanging();
					this._Locale = value;
					this.SendPropertyChanged("Locale");
					this.OnLocaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_LineItem", Storage="_LineItem", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<LineItem> LineItem
		{
			get
			{
				return this._LineItem;
			}
			set
			{
				this._LineItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderStatus", Storage="_OrderStatus", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderStatus> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				this._OrderStatus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LineItem(LineItem entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_LineItem(LineItem entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderStatus(OrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _LineNum;
		
		private System.DateTime _Timestamp;
		
		private string _Status;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnLineNumChanging(int value);
    partial void OnLineNumChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNum
		{
			get
			{
				return this._LineNum;
			}
			set
			{
				if ((this._LineNum != value))
				{
					this.OnLineNumChanging(value);
					this.SendPropertyChanging();
					this._LineNum = value;
					this.SendPropertyChanged("LineNum");
					this.OnLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderStatus", Storage="_Orders", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderStatus.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderStatus.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductId;
		
		private string _Category;
		
		private string _Name;
		
		private string _Descn;
		
		private EntitySet<Item> _Item;
		
		private EntityRef<Category> _Category1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(string value);
    partial void OnProductIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescnChanging(string value);
    partial void OnDescnChanged();
    #endregion
		
		public Product()
		{
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descn", DbType="NVarChar(255)")]
		public string Descn
		{
			get
			{
				return this._Descn;
			}
			set
			{
				if ((this._Descn != value))
				{
					this.OnDescnChanging(value);
					this.SendPropertyChanging();
					this._Descn = value;
					this.SendPropertyChanged("Descn");
					this.OnDescnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Item", Storage="_Item", ThisKey="ProductId", OtherKey="ProductId")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category1", ThisKey="Category", OtherKey="CatId", IsForeignKey=true)]
		public Category Category1
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._Category = value.CatId;
					}
					else
					{
						this._Category = default(string);
					}
					this.SendPropertyChanged("Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profile")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _LangPref;
		
		private string _FavCategory;
		
		private System.Nullable<int> _MyListOpt;
		
		private System.Nullable<int> _BannerOpt;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnLangPrefChanging(string value);
    partial void OnLangPrefChanged();
    partial void OnFavCategoryChanging(string value);
    partial void OnFavCategoryChanged();
    partial void OnMyListOptChanging(System.Nullable<int> value);
    partial void OnMyListOptChanged();
    partial void OnBannerOptChanging(System.Nullable<int> value);
    partial void OnBannerOptChanged();
    #endregion
		
		public Profile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangPref", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string LangPref
		{
			get
			{
				return this._LangPref;
			}
			set
			{
				if ((this._LangPref != value))
				{
					this.OnLangPrefChanging(value);
					this.SendPropertyChanging();
					this._LangPref = value;
					this.SendPropertyChanged("LangPref");
					this.OnLangPrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavCategory", DbType="NVarChar(30)")]
		public string FavCategory
		{
			get
			{
				return this._FavCategory;
			}
			set
			{
				if ((this._FavCategory != value))
				{
					this.OnFavCategoryChanging(value);
					this.SendPropertyChanging();
					this._FavCategory = value;
					this.SendPropertyChanged("FavCategory");
					this.OnFavCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyListOpt", DbType="Int")]
		public System.Nullable<int> MyListOpt
		{
			get
			{
				return this._MyListOpt;
			}
			set
			{
				if ((this._MyListOpt != value))
				{
					this.OnMyListOptChanging(value);
					this.SendPropertyChanging();
					this._MyListOpt = value;
					this.SendPropertyChanged("MyListOpt");
					this.OnMyListOptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerOpt", DbType="Int")]
		public System.Nullable<int> BannerOpt
		{
			get
			{
				return this._BannerOpt;
			}
			set
			{
				if ((this._BannerOpt != value))
				{
					this.OnBannerOptChanging(value);
					this.SendPropertyChanging();
					this._BannerOpt = value;
					this.SendPropertyChanged("BannerOpt");
					this.OnBannerOptChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SignOn")]
	public partial class SignOn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Password;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public SignOn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
